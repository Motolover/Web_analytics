import pandas as pd  # –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
import re            # –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
import lxml          # –ü–∞—Ä—Å–∏–Ω–≥ XML/HTML
import json          # –†–∞–±–æ—Ç–∞ —Å JSON
import os            # –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
import sys           # –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
import yaml          # –ß—Ç–µ–Ω–∏–µ YAML-–∫–æ–Ω—Ñ–∏–≥–æ–≤ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
import paramiko      # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
import requests      #
import numpy as np

from lxml import etree

import gspread
from oauth2client.service_account import ServiceAccountCredentials

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞
scope = [
    'https://www.googleapis.com/auth/spreadsheets',
    'https://www.googleapis.com/auth/drive'
]

# –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É JSON-–∫–ª—é—á—É –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ
#credentials = ServiceAccountCredentials.from_json_keyfile_name(
#    r'C:\Users\Fibo\–ü—Ä–æ–µ–∫—Ç—ã\_WH40\–°–µ—Ä–≤–µ—Ä\able-engine-276816-f1ea18570bfa.json',  # –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å
#    scope
#)

# –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É JSON-–∫–ª—é—á—É –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ
credentials = ServiceAccountCredentials.from_json_keyfile_name(
    '/usr/projects/keys/able-engine-276816-f1ea18570bfa.json',  # –ù–æ–≤—ã–π –ø—É—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    scope
)

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
client = gspread.authorize(credentials)
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ç–∞–±–ª–∏—Ü–µ
try:
    spreadsheet = client.open('joytoy_parsing_table')  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    worksheet = spreadsheet.worksheet('Import Matrix 2.0')  # –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞
    print('–¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞')

    # –ü—Ä–∏–º–µ—Ä —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    data = worksheet.get_all_records()
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(data)} –∑–∞–ø–∏—Å–µ–π")

except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {str(e)}")

rows = worksheet.get_all_values()
joytoy_wh_df = pd.DataFrame.from_records(rows)
joytoy_wh_df = pd.DataFrame.from_records(rows[1:], columns=rows[0])

#–°–æ–∑–¥–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã –∏–∑ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞
avito_df = joytoy_wh_df[['Franchise', 'Category', 'SKU (new)', 'Name', 'Short_name', 'Link', 'URL', 'Stock', 'Price', 'Scale', 'Preorder', 'Applicable Age', 'Scale', 'Articul', 'Avito_ID', 'Piece Count']]

# –í—ã–±–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
#value_list = ["6927054401284", "6927054401277", "6927054401260", "6927054401291", "6927054401338", "6927054401345"]
#avito_df = avito_df[avito_df['SKU (new)'].isin(value_list)]

# –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —Ñ—Ä–∞–Ω—à–∏–∑—ã –¥–∂–æ–π—Ç–æ–π
#value_list = ["LEGO", "JoyToy Warhammer 40K", "JoyToy Warhammer 30K", "JoyToy Dark Source", "JoyToy Infinity", "JoyToy Hardcore Coldplay", "JoyToy Dark Source-Jiang Hu", "JoyToy STRIFE", "JoyToy TMNT", "JoyToy Battle for the Stars", "JoyToy Age of Sigmar"]
#avito_df = avito_df[avito_df['Franchise'].isin(value_list)]

# –§—Ä–∞–Ω—à–∏–∑–∞ Joy –ø–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—é —Å—Ç—Ä–æ–∫–∏
avito_df = avito_df[avito_df['Franchise'].str.contains("JoyToy", na=False)]

# –ü–æ–ª—É—á–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –ø—Ä–µ–¥–∑–∞–∫–∞–∑–∞–º–∏
avit_df_1 = avito_df[((avito_df['Stock'] == '0') & (avito_df['Preorder'] != ''))]
# –ü–æ–ª—É—á–∞–µ–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –≤ –Ω–∞–ª–∏—á–∏–∏
avit_df_2 = avito_df[((avito_df['Stock'] != '0') & (avito_df['Preorder'] == ''))]

# –ê–Ω–∞–ª–æ–≥ UNION - –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫
union_df = pd.concat([avit_df_1, avit_df_2], ignore_index=True).drop_duplicates()

avito_df_final = union_df[['Franchise', 'Category', 'SKU (new)', 'Name', 'Short_name', 'Link', 'URL', 'Stock', 'Price', 'Scale', 'Preorder', 'Applicable Age', 'Scale', 'Articul', 'Avito_ID', 'Piece Count']]

# –ß–∏—Å—Ç–∏–º –ª–∏—à–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –≤ —Ñ–æ—Ç–æ. –î–æ 5 —Ñ–æ—Ç–æ–≥—Ä–∞—Ü–∏–π –º–∞–∫—Å–∏–º—É–º
def keep_part_by_char_count(string, char, count):
    # –ò—â–µ–º –∏–Ω–¥–µ–∫—Å—ã –≤—Ö–æ–∂–¥–µ–Ω–∏–π —Å–∏–º–≤–æ–ª–∞
    indices = [i for i, c in enumerate(string) if c == char]
    if len(indices) < count:
        return string
    else:
        return string[:indices[count-1]+1]

# –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Å—Ç—Ä–æ–∫–∞–º –≤ —Å—Ç–æ–ª–±—Ü–µ 'text'
char = '|'
count = 9
avito_df_final['URL'] = avito_df_final['URL'].apply(lambda x: keep_part_by_char_count(x, char, count))

Description_string_stock = """–í –Ωa–ª–∏—á–∏–∏. H–æ–≤—ã–π, –∑–∞–ø–µ—á–∞—Ç–∞–Ω–Ω—ã–π.

{Franchise} {Name}

O–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥e–ª–∏:
¬∑ –ú–∞c—à—Ç–∞–± –øpo–¥—É–∫—Ça: 1:18
¬∑ Ma—Ç–µ—Ä–∏–∞–ª: –ê–ë–°-–ü–íX
¬∑ –ü—Ä–∏–º–µ–Ω–∏–º—ã–π –≤o–∑—Ä–∞c—Ç: {ApplicableAge}
¬∑ U–†C : {SKU_new}

O—áe–Ω—å –º–Ωo–≥–æ –øo–¥–≤–∏–∂–Ω—ãx —Å—É—Å—Ç–∞–≤–æ–≤, —Åo–æ—Ç–≤–µ—Çc—Ç–≤e–Ω–Ωo –±o–ª—å—à–æ–π –≤—ã–±op –øo–∑ –¥–ª—è —Ñ–∏–≥—É—Ä–∫–∏ - –∫ –∫–∞–∂–¥–æ–π –ºo–¥e–ª–∏ –∏–¥—É—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≥–æ–ª–æ–≤—ã, —Ä—É–∫–∏, –æ—Ä—É–∂–∏–µ –∏ —Ç.–¥.

‚ù§Ô∏è –î–æ–±–∞–≤—å —ç—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫ —Å–µ–±–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ

‚úÖ –í –ø—Ä–æ—Ñ–∏–ª–µ –µ—Å—Ç—å –µ—â–µ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ!)

üí¨ –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –Ω–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏!

–ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —á—Ç–æ-—Ç–æ –∏–∑ J–æyt–æy W–∞rh–∞mm–µr/Infinity/D–∞rk S–æurs–µ, L–ïG–û, Hot Toys –∏ —Ç.–¥. –ø–∏—à–∏—Ç–µ - –º–æ–∂–µ–º –ø—Ä–∏–≤–µ–∑—Ç–∏ –ø–æ–¥ –∑–∞–∫–∞–∑ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ª—é–±–æ–π —Ç–æ–≤–∞—Ä!

# W–∞rh–∞mm–µr 40000, –í–∞—Ä—Ö–∞–º–º–µ—Ä 40000, W–∞rh–∞mm–µr 40k, J–æy–¢–æy, J–æy –¢–æy, D–µ–∞th –ö–ær—Äs –æf –öri–µg, –ö–æ—Ä–ø—É—Å –°–º–µ—Ä—Ç–∏ –ö—Ä–∏–≥–∞, –ò–º–ø–µ—Ä—Å–∫–∞—è –≥–≤–∞—Ä–¥–∏—è, Im—Ä–µri–∞l Gu–∞rd, S—Ä–∞—Å–µ –ú–∞rin–µs, S—Ä–∞—Å–µ W–ælv–µs, Ultr–∞m–∞rin–µs, –£–ª—å—Ç—Ä–∞–º–∞—Ä–∏–Ω—ã, –íl–æ–æd –êng–µls, –ö—Ä–æ–≤–∞–≤—ã–µ –ê–Ω–≥–µ–ª—ã, –êstr–∞ –úilit–∞rum, Adepta Sororitas, –°–µ—Å—Ç—Ä—ã –ë–∏—Ç–≤—ã, Adeptus Custodes, –ö—É—Å—Ç–æ–¥–µ—Å, Adeptus Mechanicus, –ú–µ—Ö–∞–Ω–∏–∫—É—Å, Black Legion, –ß–µ—Ä–Ω—ã–π –õ–µ–≥–∏–æ–Ω, Black Templars, –ß–µ—Ä–Ω—ã–µ –•—Ä–∞–º–æ–≤–Ω–∏–∫–∏, Dark Angels, –¢–µ–º–Ω—ã–µ –ê–Ω–≥–µ–ª—ã, Grey Knights, –°–µ—Ä—ã–µ –†—ã—Ü–∞—Ä–∏, Imperial Fists, –ò–º–ø–µ—Ä—Å–∫–∏–µ –ö—É–ª–∞–∫–∏, Iron Hands, –ñ–µ–ª–µ–∑–Ω—ã–µ –†—É–∫–∏, Necrons, –ù–µ–∫—Ä–æ–Ω—ã, Orkcs, –û—Ä–∫–∏, Raven Guards, –ì–≤–∞—Ä–¥–∏—è –í–æ—Ä–æ–Ω–∞, Salamanders, –°–∞–ª–∞–º–∞–Ω–¥—Ä—ã, Sons of Horus, –°—ã–Ω—ã –•–æ—Ä—É—Å–∞, T‚Äôau Empire, –ò–º–ø–µ—Ä–∏—è –¢–∞—É, White Consuls, –ë–µ–ª—ã–µ –ö–æ–Ω—Å—É–ª—ã, White Scars, –ë–µ–ª—ã–µ –®—Ä–∞–º—ã, Tyranids, –¢–∏—Ä–∞–Ω–∏–¥—ã, –í–∞—Ö–∞, –ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∏–≥—É—Ä–∫–∏, –ú–∏–Ω–∏–∞—Ç—é—Ä—ã, 1/18, 1/6, League of Legends"""

Description_string_stock


Description_string_preorder = """{Preorder}

{Franchise} {Name}

O–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥e–ª–∏:
¬∑ –ú–∞c—à—Ç–∞–± –øpo–¥—É–∫—Ça: 1:18
¬∑ Ma—Ç–µ—Ä–∏–∞–ª: –ê–ë–°-–ü–íX
¬∑ –ü—Ä–∏–º–µ–Ω–∏–º—ã–π –≤o–∑—Ä–∞c—Ç: {ApplicableAge}
¬∑ U–†C : {SKU_new}

O—áe–Ω—å –º–Ωo–≥–æ –øo–¥–≤–∏–∂–Ω—ãx —Å—É—Å—Ç–∞–≤–æ–≤, —Åo–æ—Ç–≤–µ—Çc—Ç–≤e–Ω–Ωo –±o–ª—å—à–æ–π –≤—ã–±op –øo–∑ –¥–ª—è —Ñ–∏–≥—É—Ä–∫–∏ - –∫ –∫–∞–∂–¥–æ–π –ºo–¥e–ª–∏ –∏–¥—É—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≥–æ–ª–æ–≤—ã, —Ä—É–∫–∏, –æ—Ä—É–∂–∏–µ –∏ —Ç.–¥.

‚ù§Ô∏è –î–æ–±–∞–≤—å —ç—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫ —Å–µ–±–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ

‚úÖ –í –ø—Ä–æ—Ñ–∏–ª–µ –µ—Å—Ç—å –µ—â–µ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ!)

üí¨ –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –Ω–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏!

–ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —á—Ç–æ-—Ç–æ –∏–∑ J–æyt–æy W–∞rh–∞mm–µr/Infinity/D–∞rk S–æurs–µ, L–ïG–û, Hot Toys –∏ —Ç.–¥. –ø–∏—à–∏—Ç–µ - –º–æ–∂–µ–º –ø—Ä–∏–≤–µ–∑—Ç–∏ –ø–æ–¥ –∑–∞–∫–∞–∑ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ª—é–±–æ–π —Ç–æ–≤–∞—Ä!

# W–∞rh–∞mm–µr 40000, –í–∞—Ä—Ö–∞–º–º–µ—Ä 40000, W–∞rh–∞mm–µr 40k, J–æy–¢–æy, J–æy –¢–æy, D–µ–∞th –ö–ær—Äs –æf –öri–µg, –ö–æ—Ä–ø—É—Å –°–º–µ—Ä—Ç–∏ –ö—Ä–∏–≥–∞, –ò–º–ø–µ—Ä—Å–∫–∞—è –≥–≤–∞—Ä–¥–∏—è, Im—Ä–µri–∞l Gu–∞rd, S—Ä–∞—Å–µ –ú–∞rin–µs, S—Ä–∞—Å–µ W–ælv–µs, Ultr–∞m–∞rin–µs, –£–ª—å—Ç—Ä–∞–º–∞—Ä–∏–Ω—ã, –íl–æ–æd –êng–µls, –ö—Ä–æ–≤–∞–≤—ã–µ –ê–Ω–≥–µ–ª—ã, –êstr–∞ –úilit–∞rum, Adepta Sororitas, –°–µ—Å—Ç—Ä—ã –ë–∏—Ç–≤—ã, Adeptus Custodes, –ö—É—Å—Ç–æ–¥–µ—Å, Adeptus Mechanicus, –ú–µ—Ö–∞–Ω–∏–∫—É—Å, Black Legion, –ß–µ—Ä–Ω—ã–π –õ–µ–≥–∏–æ–Ω, Black Templars, –ß–µ—Ä–Ω—ã–µ –•—Ä–∞–º–æ–≤–Ω–∏–∫–∏, Dark Angels, –¢–µ–º–Ω—ã–µ –ê–Ω–≥–µ–ª—ã, Grey Knights, –°–µ—Ä—ã–µ –†—ã—Ü–∞—Ä–∏, Imperial Fists, –ò–º–ø–µ—Ä—Å–∫–∏–µ –ö—É–ª–∞–∫–∏, Iron Hands, –ñ–µ–ª–µ–∑–Ω—ã–µ –†—É–∫–∏, Necrons, –ù–µ–∫—Ä–æ–Ω—ã, Orkcs, –û—Ä–∫–∏, Raven Guards, –ì–≤–∞—Ä–¥–∏—è –í–æ—Ä–æ–Ω–∞, Salamanders, –°–∞–ª–∞–º–∞–Ω–¥—Ä—ã, Sons of Horus, –°—ã–Ω—ã –•–æ—Ä—É—Å–∞, T‚Äôau Empire, –ò–º–ø–µ—Ä–∏—è –¢–∞—É, White Consuls, –ë–µ–ª—ã–µ –ö–æ–Ω—Å—É–ª—ã, White Scars, –ë–µ–ª—ã–µ –®—Ä–∞–º—ã, Tyranids, –¢–∏—Ä–∞–Ω–∏–¥—ã, –í–∞—Ö–∞, –ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∏–≥—É—Ä–∫–∏, –ú–∏–Ω–∏–∞—Ç—é—Ä—ã, 1/18, 1/6, League of Legends"""

Description_string_preorder

Description_string_nonstock = """–ù–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Ç–æ—á–Ω–∏—Ç—å –≤ –õ–°.

{Franchise} {Name}

O–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥e–ª–∏:
¬∑ –ú–∞c—à—Ç–∞–± –øpo–¥—É–∫—Ça: 1:18
¬∑ Ma—Ç–µ—Ä–∏–∞–ª: –ê–ë–°-–ü–íX
¬∑ –ü—Ä–∏–º–µ–Ω–∏–º—ã–π –≤o–∑—Ä–∞c—Ç: {ApplicableAge}
¬∑ U–†C : {SKU_new}

O—áe–Ω—å –º–Ωo–≥–æ –øo–¥–≤–∏–∂–Ω—ãx —Å—É—Å—Ç–∞–≤–æ–≤, —Åo–æ—Ç–≤–µ—Çc—Ç–≤e–Ω–Ωo –±o–ª—å—à–æ–π –≤—ã–±op –øo–∑ –¥–ª—è —Ñ–∏–≥—É—Ä–∫–∏ - –∫ –∫–∞–∂–¥–æ–π –ºo–¥e–ª–∏ –∏–¥—É—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≥–æ–ª–æ–≤—ã, —Ä—É–∫–∏, –æ—Ä—É–∂–∏–µ –∏ —Ç.–¥.

‚ù§Ô∏è –î–æ–±–∞–≤—å —ç—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫ —Å–µ–±–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ

‚úÖ –í –ø—Ä–æ—Ñ–∏–ª–µ –µ—Å—Ç—å –µ—â–µ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ!)

üí¨ –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –Ω–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏!

–ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —á—Ç–æ-—Ç–æ –∏–∑ J–æyt–æy W–∞rh–∞mm–µr/Infinity/D–∞rk S–æurs–µ, L–ïG–û, Hot Toys –∏ —Ç.–¥. –ø–∏—à–∏—Ç–µ - –º–æ–∂–µ–º –ø—Ä–∏–≤–µ–∑—Ç–∏ –ø–æ–¥ –∑–∞–∫–∞–∑ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ª—é–±–æ–π —Ç–æ–≤–∞—Ä!

# W–∞rh–∞mm–µr 40000, –í–∞—Ä—Ö–∞–º–º–µ—Ä 40000, W–∞rh–∞mm–µr 40k, J–æy–¢–æy, J–æy –¢–æy, D–µ–∞th –ö–ær—Äs –æf –öri–µg, –ö–æ—Ä–ø—É—Å –°–º–µ—Ä—Ç–∏ –ö—Ä–∏–≥–∞, –ò–º–ø–µ—Ä—Å–∫–∞—è –≥–≤–∞—Ä–¥–∏—è, Im—Ä–µri–∞l Gu–∞rd, S—Ä–∞—Å–µ –ú–∞rin–µs, S—Ä–∞—Å–µ W–ælv–µs, Ultr–∞m–∞rin–µs, –£–ª—å—Ç—Ä–∞–º–∞—Ä–∏–Ω—ã, –íl–æ–æd –êng–µls, –ö—Ä–æ–≤–∞–≤—ã–µ –ê–Ω–≥–µ–ª—ã, –êstr–∞ –úilit–∞rum, Adepta Sororitas, –°–µ—Å—Ç—Ä—ã –ë–∏—Ç–≤—ã, Adeptus Custodes, –ö—É—Å—Ç–æ–¥–µ—Å, Adeptus Mechanicus, –ú–µ—Ö–∞–Ω–∏–∫—É—Å, Black Legion, –ß–µ—Ä–Ω—ã–π –õ–µ–≥–∏–æ–Ω, Black Templars, –ß–µ—Ä–Ω—ã–µ –•—Ä–∞–º–æ–≤–Ω–∏–∫–∏, Dark Angels, –¢–µ–º–Ω—ã–µ –ê–Ω–≥–µ–ª—ã, Grey Knights, –°–µ—Ä—ã–µ –†—ã—Ü–∞—Ä–∏, Imperial Fists, –ò–º–ø–µ—Ä—Å–∫–∏–µ –ö—É–ª–∞–∫–∏, Iron Hands, –ñ–µ–ª–µ–∑–Ω—ã–µ –†—É–∫–∏, Necrons, –ù–µ–∫—Ä–æ–Ω—ã, Orkcs, –û—Ä–∫–∏, Raven Guards, –ì–≤–∞—Ä–¥–∏—è –í–æ—Ä–æ–Ω–∞, Salamanders, –°–∞–ª–∞–º–∞–Ω–¥—Ä—ã, Sons of Horus, –°—ã–Ω—ã –•–æ—Ä—É—Å–∞, T‚Äôau Empire, –ò–º–ø–µ—Ä–∏—è –¢–∞—É, White Consuls, –ë–µ–ª—ã–µ –ö–æ–Ω—Å—É–ª—ã, White Scars, –ë–µ–ª—ã–µ –®—Ä–∞–º—ã, Tyranids, –¢–∏—Ä–∞–Ω–∏–¥—ã, –í–∞—Ö–∞, –ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∏–≥—É—Ä–∫–∏, –ú–∏–Ω–∏–∞—Ç—é—Ä—ã, 1/18, 1/6, League of Legends"""

Description_string_nonstock

Description_string_stock_lego = """"–í –Ωa–ª–∏—á–∏–∏. H–æ–≤—ã–π, –∑–∞–ø–µ—á–∞—Ç–∞–Ω–Ω—ã–π.

{Franchise} {Name}

O–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥e–ª–∏:
¬∑ Ko–ª-–≤–æ –¥–µ—Ç–∞–ª–µ–π: {Piece_Count}
¬∑ –ü—Ä–∏–º–µ–Ω–∏–º—ã–π –≤o–∑—Ä–∞c—Ç: {ApplicableAge}
¬∑ U–†C : {SKU_new}

‚ù§Ô∏è –î–æ–±–∞–≤—å —ç—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫ —Å–µ–±–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ

‚úÖ –í –ø—Ä–æ—Ñ–∏–ª–µ –µ—Å—Ç—å –µ—â–µ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ!)

üí¨ –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –Ω–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏!

–ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —á—Ç–æ-—Ç–æ –∏–∑ J–æyt–æy W–∞rh–∞mm–µr/Infinity/D–∞rk S–æurs–µ, L–ïG–û, Hot Toys –∏ —Ç.–¥. –ø–∏—à–∏—Ç–µ - –º–æ–∂–µ–º –ø—Ä–∏–≤–µ–∑—Ç–∏ –ø–æ–¥ –∑–∞–∫–∞–∑ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ª—é–±–æ–π —Ç–æ–≤–∞—Ä!

# L–ïG–û, –õ–µ–≥–æ, –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –ù–∞–±–æ—Ä, lego star wars, lego marvel, lego city, lego heroes, lego ninjago, lego super heroes, lego technic, lego mindstorms, lego worlds, lego minecraft, lego harry potter, lego duplo, lego friends"""

Description_string_stock_lego

Description_string_preorder_lego = """" {Preorder}

{Franchise} {Name}

O–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥e–ª–∏:
¬∑ Ko–ª-–≤–æ –¥–µ—Ç–∞–ª–µ–π: {Piece_Count}
¬∑ –ü—Ä–∏–º–µ–Ω–∏–º—ã–π –≤o–∑—Ä–∞c—Ç: {ApplicableAge}
¬∑ U–†C : {SKU_new}

‚ù§Ô∏è –î–æ–±–∞–≤—å —ç—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫ —Å–µ–±–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ

‚úÖ –í –ø—Ä–æ—Ñ–∏–ª–µ –µ—Å—Ç—å –µ—â–µ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ!)

üí¨ –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –Ω–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏!

–ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —á—Ç–æ-—Ç–æ –∏–∑ J–æyt–æy W–∞rh–∞mm–µr/Infinity/D–∞rk S–æurs–µ, L–ïG–û, Hot Toys –∏ —Ç.–¥. –ø–∏—à–∏—Ç–µ - –º–æ–∂–µ–º –ø—Ä–∏–≤–µ–∑—Ç–∏ –ø–æ–¥ –∑–∞–∫–∞–∑ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ª—é–±–æ–π —Ç–æ–≤–∞—Ä!

# L–ïG–û, –õ–µ–≥–æ, –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –ù–∞–±–æ—Ä, lego star wars, lego marvel, lego city, lego heroes, lego ninjago, lego super heroes, lego technic, lego mindstorms, lego worlds, lego minecraft, lego harry potter, lego duplo, lego friends"""

Description_string_preorder_lego

def get_description(row):
    """–í—ã–±–∏—Ä–∞–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω –æ–ø–∏—Å–∞–Ω–∏—è –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –µ–≥–æ"""
    if row['Stock'] > '0' and row['Franchise'] == 'LEGO':
        template = Description_string_stock_lego
    elif row['Stock'] == '0' and str(row['Preorder']).strip() != '' and row['Franchise'] == 'LEGO':
        template = Description_string_preorder_lego
    elif row['Stock'] > '0':
        template = Description_string_stock
    elif row['Stock'] == '0' and str(row['Preorder']).strip() != '':
        template = Description_string_preorder
    else:
        template = Description_string_nonstock
    
    return template.format(
        Franchise=row['Franchise'],
        Name=row['Name'],
        Scale=row['Scale'],
        ApplicableAge=row['Applicable Age'],
        SKU_new=row['SKU (new)'],
        Preorder=row['Preorder'],
        Piece_Count =row['Piece Count']
    )

# –ö–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç
root = etree.Element('Ads', formatVersion="3", target="Avito.ru")

for _, row in avito_df_final.iterrows():
    ad = etree.SubElement(root, 'Ad')

    etree.SubElement(ad, 'Id').text = str(row['SKU (new)'])
    etree.SubElement(ad, 'DateBegin').text = ''
    etree.SubElement(ad, 'DateEnd').text = ''
    etree.SubElement(ad, 'ListingFee').text = ''
    etree.SubElement(ad, 'AdStatus').text = 'Free'
    etree.SubElement(ad, 'AvitoId').text = str(row['Avito_ID'])
    etree.SubElement(ad, 'ManagerName').text = ''
    etree.SubElement(ad, 'ContactPhone').text = '+7 985 182-56-36'
    etree.SubElement(ad, 'Address').text = '–ú–æ—Å–∫–≤–∞, –º–µ—Ç—Ä–æ –£–ª–∏—Ü–∞ –°–∫–æ–±–µ–ª–µ–≤—Å–∫–∞—è'
    etree.SubElement(ad, 'Latitude').text = ''
    etree.SubElement(ad, 'Longitude').text = ''
    etree.SubElement(ad, 'Title').text = row['Short_name']
    etree.SubElement(ad, 'Description').text = get_description(row)
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–µ–Ω—ã –±–µ–∑ –∑–∞–ø—è—Ç—ã—Ö
    price_value = str(int(str(row['Price']).replace(',', '').strip()))
    etree.SubElement(ad, 'Price').text = price_value
    etree.SubElement(ad, 'Stock').text = str(row['Stock'])
    
    # –ë–ª–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π)
    images = etree.SubElement(ad, 'Images')
    if pd.notna(row.get('URL')):
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–∏, –∫–æ–≥–¥–∞ URL —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –∑–∞–ø—è—Ç—ã–º–∏
        url_list = [url.strip() for url in str(row['URL']).split(' | ') if url.strip()]
        for url in url_list:
            etree.SubElement(images, 'Image', url=url)

    etree.SubElement(ad, 'VideoURL').text = ''
    etree.SubElement(ad, 'ContactMethod').text = ''
    etree.SubElement(ad, 'Category').text = '–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'
    etree.SubElement(ad, 'InternetCalls').text = ''
    etree.SubElement(ad, 'CallsDevices').text = ''
    etree.SubElement(ad, 'Delivery').text = ''
    etree.SubElement(ad, 'WeightForDelivery').text = ''
    etree.SubElement(ad, 'LengthForDelivery').text = ''
    etree.SubElement(ad, 'HeightForDelivery').text = ''
    etree.SubElement(ad, 'WidthForDelivery').text = ''
    etree.SubElement(ad, 'DeliverySubsidy').text = ''
    etree.SubElement(ad, 'GoodsType').text = '–ú–æ–¥–µ–ª–∏'
    etree.SubElement(ad, 'AdType').text = '–¢–æ–≤–∞—Ä –æ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è' if row['Franchise'] == 'LEGO' else '–ü—Ä–æ–¥–∞—é —Å–≤–æ—ë'
    etree.SubElement(ad, 'Condition').text = '–ù–æ–≤–æ–µ'
    etree.SubElement(ad, 'VideoFileURL').text = ''
    etree.SubElement(ad, 'SeriesLEGO').text = ''
    etree.SubElement(ad, 'Brand').text = 'LEGO' if row['Franchise'] == 'LEGO' else ''
    etree.SubElement(ad, 'Toys').text = '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã' if row['Franchise'] == 'LEGO' else ''

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∞—Å–∏–≤–æ–≥–æ XML
tree = etree.ElementTree(root)
tree.write('output.xml', pretty_print=True, encoding='utf-8', xml_declaration=True)

# –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–æ–∫—É:
xml_string = etree.tostring(root, pretty_print=True, encoding='unicode')
#print(xml_string)

# —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞ –¥–∏—Å–∫
#tree.write(r'C:\Users\Fibo\–ü—Ä–æ–µ–∫—Ç—ã\_WH40\–°–µ—Ä–≤–µ—Ä\avito_feed.xml', 
#           pretty_print=True, 
#           encoding='utf-8', 
#           xml_declaration=True)

# –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –ù–ê –°–ï–†–í–ï–†–ï (–Ω–µ –ª–æ–∫–∞–ª—å–Ω—ã–π!)
output_path = '/var/www/html/avito_feed.xml'  # –ü—Ä–∏–º–µ—Ä –ø—É—Ç–∏

# 3. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
try:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–∞–ø–∫–µ
    if not os.path.exists("/var/www/html"):
        raise FileNotFoundError("–ü–∞–ø–∫–∞ /var/www/html –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    if not os.access("/var/www/html", os.W_OK):
        raise PermissionError("–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ /var/www/html")

    # –°–æ–∑–¥–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º XML
    tree = etree.ElementTree(root)
    tree.write(
        output_path,
        pretty_print=True,
        xml_declaration=True,
        encoding="utf-8"
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if os.path.exists(output_path):
        print(f"–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {output_path}")
        print(f"–†–∞–∑–º–µ—Ä: {os.path.getsize(output_path)} –±–∞–π—Ç")
    else:
        raise RuntimeError("–§–∞–π–ª –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω!")

except Exception as e:
    print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è XML: {str(e)}")
    raise  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
